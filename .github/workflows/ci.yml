name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run ruff linter
      run: |
        uv run ruff check src/ --output-format=github
    
    - name: Run black formatter check
      run: |
        uv run black --check src/
    
    - name: Run mypy type checking (non-blocking)
      run: |
        uv run mypy src/ --show-error-codes || echo "Type checking has warnings but continues"
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing
      env:
        ALPACA_API_KEY: test_key
        ALPACA_SECRET_KEY: test_secret
        ALPACA_PAPER_TRADE: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run safety check
      run: |
        uv run safety check
      continue-on-error: true
    
    - name: Run bandit security linter
      run: |
        uv pip install bandit
        uv run bandit -r src/ -f json || echo "Security scan completed with warnings"
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Build package
      run: |
        uv sync
        uv build
    
    - name: Test server startup
      run: |
        timeout 10s uv run python main.py || echo "Server startup test completed"
      env:
        ALPACA_API_KEY: test_key
        ALPACA_SECRET_KEY: test_secret
        ALPACA_PAPER_TRADE: true